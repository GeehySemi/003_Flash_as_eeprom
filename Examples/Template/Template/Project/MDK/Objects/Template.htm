<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Template.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Template.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sun Jan 08 19:58:15 2023
<BR><P>
<H3>Maximum Stack Usage =        132 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; flash_ee_init &rArr; flash_ee_valid_transfer &rArr; flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForReady
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[14]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[14]">ADC_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[8]">EINTA_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[9]">EINTB_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[a]">EINTC_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[b]">EINTD_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[16]">FLASH_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from apm32f00x_int.o(i.HardFault_Handler) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[13]">IIC_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from apm32f00x_int.o(i.NMI_Handler) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from apm32f00x_int.o(i.PendSV_Handler) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[7]">RCM_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[c]">SPI_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from apm32f00x_int.o(i.SVC_Handler) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from apm32f00x_int.o(i.SysTick_Handler) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[1e]">SystemInit</a> from system_apm32f00x.o(i.SystemInit) referenced from startup_apm32f0xx.o(.text)
 <LI><a href="#[1c]">TMR1A_CC_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[1b]">TMR1A_UT_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[e]">TMR1_CC_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[d]">TMR1_UT_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[10]">TMR2_CC_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[f]">TMR2_UO_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[15]">TMR4_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[12]">USART1_RX_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[11]">USART1_TX_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[1a]">USART2_RX_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[19]">USART2_TX_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[18]">USART3_RX_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[17]">USART3_TX_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[6]">WUPT_IRQHandler</a> from startup_apm32f0xx.o(.text) referenced from startup_apm32f0xx.o(RESET)
 <LI><a href="#[1f]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_apm32f0xx.o(.text)
 <LI><a href="#[20]">fputc</a> from main.o(i.fputc) referenced from printf5.o(i.__0printf$5)
 <LI><a href="#[1d]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1f]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(.text)
</UL>
<P><STRONG><a name="[4d]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[21]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[28]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4e]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[4f]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[50]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[23]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[51]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[52]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>EINTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EINTB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EINTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EINTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>IIC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TMR1A_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TMR1A_UT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TMR1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TMR1_UT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TMR2_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TMR2_UO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TMR4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>USART1_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>USART1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>USART2_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>USART2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>USART3_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>USART3_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WUPT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_GetMasterClockFreq
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[25]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[22]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[54]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[55]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[56]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>FMC_ErasePage</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, apm32f00x_fmc.o(i.FMC_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FMC_ErasePage &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_WaitForReady
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_page_erase
</UL>

<P><STRONG><a name="[40]"></a>FMC_Lock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apm32f00x_fmc.o(i.FMC_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_write
</UL>

<P><STRONG><a name="[2d]"></a>FMC_ProgramHalfWord</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, apm32f00x_fmc.o(i.FMC_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FMC_ProgramHalfWord &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_WaitForReady
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_write_no_check
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_format
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_erase_transfer
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_copy_to_new_page
</UL>

<P><STRONG><a name="[2e]"></a>FMC_ReadState</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, apm32f00x_fmc.o(i.FMC_ReadState))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_WaitForReady
</UL>

<P><STRONG><a name="[3e]"></a>FMC_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f00x_fmc.o(i.FMC_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_write
</UL>

<P><STRONG><a name="[2c]"></a>FMC_WaitForReady</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, apm32f00x_fmc.o(i.FMC_WaitForReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ReadState
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramHalfWord
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ErasePage
</UL>

<P><STRONG><a name="[4c]"></a>GPIO_ClearBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apm32f00x_gpio.o(i.GPIO_ClearBit))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>GPIO_Config</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, apm32f00x_gpio.o(i.GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>GPIO_SetBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apm32f00x_gpio.o(i.GPIO_SetBit))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32f00x_int.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32f00x_int.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32f00x_int.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RCM_GetMasterClockFreq</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, apm32f00x_rcm.o(i.RCM_GetMasterClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RCM_GetMasterClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32f00x_int.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32f00x_int.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SystemInit</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, system_apm32f00x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; ConfigMasterClock
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMasterClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f0xx.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>USARTInit</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, main.o(i.USARTInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = USARTInit &rArr; USART_Config &rArr; RCM_GetMasterClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Enable
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ConfigSyncClock
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33]"></a>USART_Config</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, apm32f00x_usart.o(i.USART_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USART_Config &rArr; RCM_GetMasterClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_GetMasterClockFreq
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_EnableInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTInit
</UL>

<P><STRONG><a name="[32]"></a>USART_ConfigSyncClock</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, apm32f00x_usart.o(i.USART_ConfigSyncClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ConfigSyncClock
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTInit
</UL>

<P><STRONG><a name="[34]"></a>USART_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apm32f00x_usart.o(i.USART_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTInit
</UL>

<P><STRONG><a name="[35]"></a>USART_EnableInterrupt</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, apm32f00x_usart.o(i.USART_EnableInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[46]"></a>USART_ReadStatusFlag</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, apm32f00x_usart.o(i.USART_ReadStatusFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_ReadStatusFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[47]"></a>USART_TxData8</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apm32f00x_usart.o(i.USART_TxData8))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[36]"></a>__0printf$5</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[57]"></a>__1printf$5</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)

<P><STRONG><a name="[49]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[59]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[5a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[4a]"></a>buffer_compare</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, main.o(i.buffer_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = buffer_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>flash_ee_copy_to_new_page</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, eeprom.o(i.flash_ee_copy_to_new_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramHalfWord
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_write_no_check
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_valid_page_get
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_page_erase
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_read
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_valid_transfer
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_full_check
</UL>

<P><STRONG><a name="[3a]"></a>flash_ee_data_read</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, eeprom.o(i.flash_ee_data_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = flash_ee_data_read &rArr; flash_ee_valid_page_get
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_valid_page_get
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_copy_to_new_page
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>flash_ee_data_write</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, eeprom.o(i.flash_ee_data_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = flash_ee_data_write &rArr; flash_ee_full_check &rArr; flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Unlock
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Lock
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_write_no_check
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_full_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41]"></a>flash_ee_erase_transfer</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, eeprom.o(i.flash_ee_erase_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = flash_ee_erase_transfer &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
</UL>

<P><STRONG><a name="[42]"></a>flash_ee_format</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, eeprom.o(i.flash_ee_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = flash_ee_format &rArr; flash_ee_page_erase &rArr; FMC_ErasePage &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramHalfWord
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_page_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
</UL>

<P><STRONG><a name="[44]"></a>flash_ee_format_check</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, eeprom.o(i.flash_ee_format_check))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
</UL>

<P><STRONG><a name="[3f]"></a>flash_ee_full_check</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, eeprom.o(i.flash_ee_full_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = flash_ee_full_check &rArr; flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_valid_page_get
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_copy_to_new_page
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_write
</UL>

<P><STRONG><a name="[43]"></a>flash_ee_init</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, eeprom.o(i.flash_ee_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = flash_ee_init &rArr; flash_ee_valid_transfer &rArr; flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Unlock
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Lock
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_valid_transfer
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_page_erase
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_full_check
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_format_check
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_format
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_erase_transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3c]"></a>flash_ee_page_erase</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, eeprom.o(i.flash_ee_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = flash_ee_page_erase &rArr; FMC_ErasePage &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_valid_transfer
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_format
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_copy_to_new_page
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
</UL>

<P><STRONG><a name="[39]"></a>flash_ee_valid_page_get</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, eeprom.o(i.flash_ee_valid_page_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_ee_valid_page_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_write_no_check
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_full_check
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_copy_to_new_page
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_read
</UL>

<P><STRONG><a name="[45]"></a>flash_ee_valid_transfer</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, eeprom.o(i.flash_ee_valid_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = flash_ee_valid_transfer &rArr; flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_page_erase
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_copy_to_new_page
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
</UL>

<P><STRONG><a name="[3b]"></a>flash_ee_write_no_check</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, eeprom.o(i.flash_ee_write_no_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramHalfWord
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_valid_page_get
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_copy_to_new_page
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_write
</UL>

<P><STRONG><a name="[20]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, main.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fputc &rArr; USART_ReadStatusFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TxData8
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadStatusFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf5.o(i.__0printf$5)
</UL>
<P><STRONG><a name="[1d]"></a>main</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = main &rArr; flash_ee_init &rArr; flash_ee_valid_transfer &rArr; flash_ee_copy_to_new_page &rArr; flash_ee_write_no_check &rArr; FMC_ProgramHalfWord &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearBit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_write
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ee_data_read
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_compare
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[29]"></a>ConfigMasterClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_apm32f00x.o(i.ConfigMasterClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ConfigMasterClock
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MasterClock24M
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[2a]"></a>MasterClock24M</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, system_apm32f00x.o(i.MasterClock24M))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigMasterClock
</UL>

<P><STRONG><a name="[37]"></a>_printf_core</STRONG> (Thumb, 680 bytes, Stack size 96 bytes, printf5.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$5
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[24]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
